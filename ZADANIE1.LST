Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 1
zadanie1.asm



      1				     ; Zadanie c.1
      2				     ; Roman Roöt·r
      3				     ;
      4				     ; TEXT ZADANIA
      5				     ;	     NapÌöte program (v	JSI), ktor˝ umoûnÌ pouûÌvatelovi pomocou menu nasleduj˙ce akcie:    +
      6				     zadat meno	s˙boru,	vypÌsat	obsah s˙boru, vypÌsat dlûku s˙boru
      7				     ;	     (v	desiatkovej s˙stave, v bajtoch), vykonat pridelen˙ ˙lohu, ukoncit program. Program  +
      8				     nacÌta volbu pouûÌvatela z	kl·vesnice. Program sa musÌ ukoncit aj po stlacenÌ kl·vesu "ESCAPE".
      9				     ;	     V programe	vhodne pouûite makro s parametrom, ako aj vhodnÈ volania OS (resp. BIOS) pre+
     10				     nacÌtanie znaku, nastavenie kurzora, v˝pis	retazca, zmazanie obrazovky a pod. Na spracovanie   +
     11				     pola
     12				     ;	     znakov musia byt vhodne pouûitÈ retazcovÈ inötrukcie. Pridelen· ˙loha musÌ	byt	    +
     13				     realizovan· ako extern· proced˙ra (kompilovan· samostatne a prilinkovan· k	v˝slednÈmu programu).
     14				     ;	     DefinÌcie makier musia byt	v samostatnom s˙bore. Program musÌ korektne spracovat s˙bory+
     15				     s dlûkou aspon do 128 kB. Pri cÌtanÌ vyuûite pole vhodnej velkosti	(buffer), pricom zo s˙boru do
     16				     ;	     pam‰te sa bude pres˙vat vûdy (aû na poslednÈ cÌtanie) cel·	velkost	pola. Oöetrite	    +
     17				     chybovÈ stavy.
     18				     ;
     19				     ; DOPLNKOVA ULOHA
     20				     ; NaËÌtaù reùazec a vypÌsaù poËet jeho v˝skytov (ako podreùazca) v	s˙bore.
     21				     ;PREKLAD:	       [cesta]\tasm /l/zi/c subor.asm
     22				     ;LINKOVANIE:      [cesta]\tlink /l/i/v subor.obj
     23				     ;POMOCNE PROGRAMY:[cesta]\thelp\help.exe, abshelp.exe
     24				     ;		       [cesta]\tasm\thelp.com
     25				     ;		       [cesta]\ng\ng.exe
     26
     27
     28	0000			     ZAS   segment stack 'stack'								    +
     29				     ;zaciatok zasobnikoveho segmentu
     30	0000  40*(????)			   dw 64 dup(?)										    +
     31				     ;definicia	64-och slov v pamati
     32	0080			     ZAS   ENDS						       ;koniec zasobnikoveho segmentu
     33
     34	0000			     DATA    SEGMENT
     35					 ;zaciatok datoveho segmentu
     36
     37					 ;misc
     38	      =	13,10			 NEWL EQU 13,10
     39	      =0009			 TAB EQU 9
     40	0000  0D 0A 24			 NEWLINE   DB NEWL,'$'
     41	0003  61 68 6F 6A 2E 74	78+	 TESTFILE  DB 'ahoj.txt',0,'$'
     42	      74 00 24
     43
     44					 ;menu
     45	000D  0D 0A 41 53 4D 20	5A+	 MENU	       DB NEWL,'ASM Zadanie 1. -- Autor: Roman Rostar (c)',NEWL,'MENU :',NEWL
     46	      61 64 61 6E 69 65	20+
     47	      31 2E 20 2D 2D 20	41+
     48	      75 74 6F 72 3A 20	52+
     49	      6F 6D 61 6E 20 52	6F+
     50	      73 74 61 72 20 28	63+
     51	      29 0D 0A 4D 45 4E	55+
     52	      20 3A 0D 0A
     53	0042  09 31 2E 20 4E 61	63+				 DB TAB,'1. Nacitat subor',NEWL
     54	      69 74 61 74 20 73	75+
     55	      62 6F 72 0D 0A
     56	0055  09 32 2E 20 56 79	70+				       DB TAB,'2. Vypisat obsah	suboru',NEWL
     57	      69 73 61 74 20 6F	62+
Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 2
zadanie1.asm



     58	      73 61 68 20 73 75	62+
     59	      6F 72 75 0D 0A
     60	006F  09 33 2E 20 50 6F	7A+			       DB TAB,'3. Pozicia maximalneho znaku v subore',NEWL
     61	      69 63 69 61 20 6D	61+
     62	      78 69 6D 61 6C 6E	65+
     63	      68 6F 20 7A 6E 61	6B+
     64	      75 20 76 20 73 75	62+
     65	      6F 72 65 0D 0A
     66	0097  09 34 2E 20 5A 6D	61+			       DB TAB,'4. Zmazat obrazovku a vypisat menu',NEWL,'$'
     67	      7A 61 74 20 6F 62	72+
     68	      61 7A 6F 76 6B 75	20+
     69	      61 20 76 79 70 69	73+
     70	      61 74 20 6D 65 6E	75+
     71	      0D 0A 24
     72	00BD  09 5B 45 53 43 2C	45+		   DB TAB,'[ESC,ENTER pre vypnutie programu',NEWL,'$'
     73	      4E 54 45 52 20 70	72+
     74	      65 20 76 79 70 6E	75+
     75	      74 69 65 20 70 72	6F+
     76	      67 72 61 6D 75 0D	0A+
     77	      24
     78	00E1  4E 65 7A 6E 61 6D	79+	 UNKNWN	   DB 'Neznamy prikaz',NEWL,'$'
     79	      20 70 72 69 6B 61	7A+
     80	      0D 0A 24
     81
     82					 ;messages
     83	00F2  53 74 6C 61 63 74	65+	 MSG_BACK	     DB	'Stlacte ENTER pre navrat do menu',NEWL,'$'
     84	      20 45 4E 54 45 52	20+
     85	      70 72 65 20 6E 61	76+
     86	      72 61 74 20 64 6F	20+
     87	      6D 65 6E 75 0D 0A	24
     88	0115  0D 0A 53 74 6C 61	63+	 MSG_RETURN_ENTER	     DB	     NEWL,'Stlacte ENTER pre navrat do hlavneho	menu.$'
     89	      74 65 20 45 4E 54	45+
     90	      52 20 70 72 65 20	6E+
     91	      61 76 72 61 74 20	64+
     92	      6F 20 68 6C 61 76	6E+
     93	      65 68 6F 20 6D 65	6E+
     94	      75 2E 24
     95	0142  5A 61 64 61 6A 74	65+	 MSG_FILE_NAME	     DB	 'Zadajte meno suboru',NEWL,'$'
     96	      20 6D 65 6E 6F 20	73+
     97	      75 62 6F 72 75 0D	0A+
     98	      24
     99	0158  50 6F 63 65 74 20	7A+	 MSG_LEN	     DB	'Pocet znako v subore je: ','$'
    100	      6E 61 6B 6F 20 76	20+
    101	      73 75 62 6F 72 65	20+
    102	      6A 65 3A 20 24
    103
    104					 ;error	messages
    105	0172  45 72 72 6F 72 3A	20+	 ERROR	   DB 'Error: Not yet implemented!',NEWL,'$'
    106	      4E 6F 74 20 79 65	74+
    107	      20 69 6D 70 6C 65	6D+
    108	      65 6E 74 65 64 21	0D+
    109	      0A 24
    110	0190  4E 61 73 74 61 6C	61+	 ERROR_FL  DB 'Nastala chyba pri otvarani suboru',NEWL,'$'
    111	      20 63 68 79 62 61	20+
    112	      70 72 69 20 6F 74	76+
    113	      61 72 61 6E 69 20	73+
    114	      75 62 6F 72 75 0D	0A+
Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 3
zadanie1.asm



    115	      24
    116	01B4  4E 61 6A 70 72 76	20+	 ERR_NO_HANDLE	DB 'Najprv nacitajte subor',NEWL,'$'
    117	      6E 61 63 69 74 61	6A+
    118	      74 65 20 73 75 62	6F+
    119	      72 0D 0A 24
    120					 ;
    121					 ;File handle suboru
    122	01CD  0000			 HANDLE	   DW 0
    123	01CF  64*(??)			 FILENAME  DB 100 dup (?)
    124	0233  00			 FN_LEN	   DB 0
    125	0234  64*(??)			 BUFFER	   DB 100 dup (?)
    126	0298  0000			 READ	   DW 0
    127	029A  00			 dec_length	     db	     0
    128	029B			     DATA ENDS
    129
    130				     include makra.asm
1   131				       ;makro na vycistenie obrazovky aka clrscr
1   132				       CLRSCR  macro
1   133					       mov AX,3
1   134					       int 10H
1   135				       endm
1   136
1   137				       ;makro s	parametrom na vypis retazca
1   138				       PRINT macro TEXT
1   139					 mov ah,9
1   140					 mov dx,offset TEXT
1   141					 int 21h
1   142				       endm
    143
    144	0000			     CODE SEGMENT
    145				     ASSUME CS:CODE,DS:DATA,SS:ZAS  ;makro na vycistenie obrazovky aka clrscr
    146
    147	0000			       WAIT_FOR	proc
    148	0000				 waiting:
    149						     PRINT MSG_RETURN_ENTER
1   150	0000  B4 09			 mov ah,9
1   151	0002  BA 0115r			 mov dx,offset MSG_RETURN_ENTER
1   152	0005  CD 21			 int 21h
    153	0007  B4 08			   mov AH, 8	     ; nacitanie znaku
    154	0009  CD 21					     int 21H
    155	000B  3C 0D					     cmp AL, 13		     ;Porovnaj ci bol stlaceny enter
    156	000D  E0 F1				     loopne waiting
    157	000F  C3				     ret
    158	0010				     endp
    159
    160	0010			       CHARS proc			     ; prevod z	bytov do dekadickeho cisla
    161	0010  C6 06 029Ar 00			     mov dec_length, 0	     ;dlzka decimalneho	cisla =	pocet cifier zatial 0
    162	0015				     DEC_DIVISION:
    163	0015  33 D2				     xor dx, dx			     ;uvodny xor
    164	0017  B9 000A				     mov cx, 10
    165
    166	001A  8B C3				     mov ax, bx		     ;do ax nacitame nase cislo, ktore chceme vypisovat,    +
    167				     vzdy v programe ho	umiesnujem to bx
    168	001C  F7 F1				     div cx		     ;predelime	desiatmi
    169	001E  8B D8				     mov bx, ax		     ;do bx skopirujeme	obsah ax, tj predelene cislo
    170	0020  52				     push dx		     ;do dx hodime cifru
    171	0021  FE 06 029Ar			     inc dec_length	     ;pridame jednu cifru
Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 4
zadanie1.asm



    172	0025  83 FB 00				     cmp bx, 0			     ;skontrolujeme ci este mame cifry v bx
    173	0028  74 02				     jz	DEC_PRINT
    174	002A  EB E9				     jmp DEC_DIVISION
    175
    176	002C				     DEC_PRINT:		     ;vypisanie	dekadickeho cisla
    177	002C  5A				     pop dx	     ;cifru vytiahneme z dx
    178	002D  83 C2 30				     add dx, 30h		     ;posun na zaciatok	cisel
    179	0030  B4 02				     mov ah, 02h		     ;funkcia na print cisla
    180	0032  CD 21				     int 21h
    181	0034  FE 0E 029Ar			     dec dec_length	     ; posun o cifru dalej
    182	0038  80 3E 029Ar 00			     cmp dec_length, 0
    183	003D  74 02				     jz	navrat ;uz sme vypisali	cele cislo
    184	003F  EB EB				     jmp DEC_PRINT
    185	0041				     navrat:
    186	0041  C3				     ret
    187	0042				     endp CHARS
    188
    189	0042			       READNAME	proc
    190					 ;PRINT	MSG_FILE_NAME
    191	0042  BB 01CFr			 lea BX, FILENAME
    192	0045				 reading:
    193	0045  B4 01			   mov AH, 1	     ; nacitanie znaku
    194	0047  CD 21					     int 21H
    195	0049  3C 0D					     cmp AL, 13		     ;Porovnaj ci bol stlaceny enter
    196	004B  74 09			   jz  return	 ;ak hej skoncili sme
    197	004D  88 07			   mov [BX],AL	 ;
    198	004F  43			   inc BX
    199	0050  FE 06 0233r		   inc FN_LEN
    200	0054  EB EF			   jmp reading
    201	0056				 return:
    202	0056  B0 24			   mov AL,'$'
    203	0058  88 07			   mov [BX],AL
    204					   ;PRINT FILE
    205	005A  8A 26 0233r		   mov AH, FN_LEN  ;necham v AH	dlzku mena
    206	005E  C3				       ret
    207	005F			       endp
    208
    209	005F			       START:
    210					 ;nacitanie programu
    211	005F  B8 0000s			 MOV AX, SEG DATA
    212	0062  8E D8				     MOV DS, AX
    213	0064			     clear:
    214					 CLRSCR
1   215	0064  B8 0003			       mov AX,3
1   216	0067  CD 10			       int 10H
    217	0069			     vyp_menu:
    218					 PRINT MENU
1   219	0069  B4 09			 mov ah,9
1   220	006B  BA 000Dr			 mov dx,offset MENU
1   221	006E  CD 21			 int 21h
    222	0070			     select:
    223	0070  B4 01				     mov  ah,1
    224	0072  CD 21				     int  21h
    225	0074  3C 31				     cmp al,'1'			     ;nacitaj subor
    226	0076  74 24				     jz	load_inter
    227	0078  3C 32				     cmp al, '2'	     ;vypis subor
    228	007A  74 36				     jz	output_file
Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 5
zadanie1.asm



    229	007C  3C 33				     cmp al, '3'     ;pocet vyskytov v subore
    230	007E  74 22				     jz	occur
    231	0080  3C 34			 cmp al,'4'		     ;zmaz obrazovku,vypis menu
    232	0082  74 E0				     jz	clear
    233	0084  3C 1B				     cmp al, 27	; esc na ukoncenie
    234	0086  74 17				     jz	quit_inter1
    235	0088  3C 0D				     cmp al, 13	;enter na ukoncenie
    236	008A  74 13				     jz	quit_inter1
    237					 PRINT NEWLINE
1   238	008C  B4 09			 mov ah,9
1   239	008E  BA 0000r			 mov dx,offset NEWLINE
1   240	0091  CD 21			 int 21h
    241					 PRINT UNKNWN  ;ak stlatcil nieco ine
1   242	0093  B4 09			 mov ah,9
1   243	0095  BA 00E1r			 mov dx,offset UNKNWN
1   244	0098  CD 21			 int 21h
    245					 ;PRINT	NEWL
    246	009A  EB D4			 jmp select
    247	009C			     load_inter:
    248	009C  E9 0080			 jmp load_file
    249	009F			     quit_inter1:
    250	009F  EB 7B 90			 jmp quit_inter2
    251	00A2			     occur:
    252					 PRINT NEWLINE
1   253	00A2  B4 09			 mov ah,9
1   254	00A4  BA 0000r			 mov dx,offset NEWLINE
1   255	00A7  CD 21			 int 21h
    256					 PRINT ERROR
1   257	00A9  B4 09			 mov ah,9
1   258	00AB  BA 0172r			 mov dx,offset ERROR
1   259	00AE  CD 21			 int 21h
    260	00B0  EB B7			 jmp vyp_menu
    261
    262	00B2			     output_file:
    263					 PRINT NEWLINE
1   264	00B2  B4 09			 mov ah,9
1   265	00B4  BA 0000r			 mov dx,offset NEWLINE
1   266	00B7  CD 21			 int 21h
    267	00B9  A1 01CDr			 mov AX,HANDLE
    268	00BC  3D 0000			 cmp AX,0
    269	00BF  75 09			 jnz go_on
    270					 PRINT ERR_NO_HANDLE
1   271	00C1  B4 09			 mov ah,9
1   272	00C3  BA 01B4r			 mov dx,offset ERR_NO_HANDLE
1   273	00C6  CD 21			 int 21h
    274	00C8  EB 9F			 jmp vyp_menu
    275
    276	00CA			     go_on:
    277	00CA  B4 42			 mov ah, 42h
    278	00CC  8B 1E 01CDr		 mov BX, HANDLE
    279	00D0  B0 00			 mov al, 0 ;idem od current
    280	00D2  BA 0000			 mov dx, 0
    281	00D5  B9 0000			 mov cx, 0
    282	00D8			     cont:	   ;pokracujem citanie
    283	00D8  B4 3F			 mov AH, 3Fh
    284	00DA  8B 1E 01CDr		 mov BX, HANDLE
    285	00DE  B9 0063			 mov CX, 99
Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 6
zadanie1.asm



    286	00E1  BA 0234r			 lea DX, BUFFER
    287	00E4  CD 21			 int 21h
    288	00E6  01 06 0298r		 add READ,AX
    289	00EA  3B C1			 cmp ax,cx ;porovnam kolko ancital
    290	00EC  75 1A			 jne end_read;chod niekam, kde
    291	00EE  8B D8			 mov bx,ax
    292	00F0  C6 87 0234r 24		 mov BUFFER[bx],'$'
    293					 PRINT BUFFER
1   294	00F5  B4 09			 mov ah,9
1   295	00F7  BA 0234r			 mov dx,offset BUFFER
1   296	00FA  CD 21			 int 21h
    297	00FC  B4 42			 mov ah, 42h
    298	00FE  B0 01			 mov al, 1 ;idem od current
    299	0100  BA 0063			 mov dx, 99
    300	0103  B9 0000			 mov cx, 0
    301	0106  EB D0			 jmp cont
    302	0108			     end_read:
    303	0108  8B D8			 mov bx,ax
    304	010A  C6 87 0234r 24		 mov BUFFER[bx],'$'
    305					 PRINT BUFFER
1   306	010F  B4 09			 mov ah,9
1   307	0111  BA 0234r			 mov dx,offset BUFFER
1   308	0114  CD 21			 int 21h
    309	0116  E8 FEE7			 call WAIT_FOR
    310	0119  E9 FF4D			 jmp vyp_menu
    311
    312	011C			     quit_inter2:
    313	011C  EB 5E 90			 jmp quit
    314
    315	011F			     load_file:
    316					 PRINT NEWLINE
1   317	011F  B4 09			 mov ah,9
1   318	0121  BA 0000r			 mov dx,offset NEWLINE
1   319	0124  CD 21			 int 21h
    320	0126  A1 01CDr			 mov ax,handle
    321	0129  3D 0000			 cmp ax, 0
    322	012C  74 06			 jz empty_handle
    323	012E  8B D8			 mov bx, ax  ;nacitam filehandle
    324	0130  B4 3E			 mov ah, 3Eh ;fcia na zavretie handle
    325	0132  CD 21			 int 21h
    326	0134			     empty_handle:
    327	0134  E8 FF0B			 call READNAME
    328	0137  80 FC 00			 cmp AH,0
    329	013A  74 18			 jz  nenacitane
    330	013C  B4 3D			 mov AH, 3DH ; FCIA NA OTVORENIE SUBORU
    331	013E  B0 00			 mov AL, 0   ; 0= READ-ONLY ACCESS
    332	0140  BA 01CFr			 mov DX, OFFSET	FILENAME
    333	0143  CD 21			 int 21H
    334					 ;ak bola chyba	tak ideme prec
    335	0145  72 21			 jc file_err
    336
    337	0147  A3 01CDr			 mov handle,ax ;nebola chyba
    338					 PRINT handle
1   339	014A  B4 09			 mov ah,9
1   340	014C  BA 01CDr			 mov dx,offset handle
1   341	014F  CD 21			 int 21h
    342	0151  E9 FF15			 jmp vyp_menu
Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 7
zadanie1.asm



    343
    344	0154			     nenacitane:
    345					 PRINT NEWLINE
1   346	0154  B4 09			 mov ah,9
1   347	0156  BA 0000r			 mov dx,offset NEWLINE
1   348	0159  CD 21			 int 21h
    349					 PRINT ERROR
1   350	015B  B4 09			 mov ah,9
1   351	015D  BA 0172r			 mov dx,offset ERROR
1   352	0160  CD 21			 int 21h
    353	0162  E8 FE9B			 call WAITING
    354	0165  E9 FF01			 jmp vyp_menu
    355
    356	0168			     file_err:
    357					 PRINT NEWLINE
1   358	0168  B4 09			 mov ah,9
1   359	016A  BA 0000r			 mov dx,offset NEWLINE
1   360	016D  CD 21			 int 21h
    361					 PRINT ERROR_FL
1   362	016F  B4 09			 mov ah,9
1   363	0171  BA 0190r			 mov dx,offset ERROR_FL
1   364	0174  CD 21			 int 21h
    365	0176  E8 FE87			 call WAIT_FOR
    366	0179  E9 FEED			 jmp vyp_menu
    367
    368
    369
    370	017C			     quit:
    371					 ;ukoncenie programu
    372	017C  A1 01CDr			 mov ax,handle
    373	017F  3D 0000			 cmp ax, 0
    374	0182  74 1B			 jz final
    375	0184  8B D8			 mov bx, ax  ;nacitam filehandle
    376	0186  B4 3E			 mov ah, 3Eh ;fcia na zavretie handle
    377	0188  CD 21			 int 21h
    378					 PRINT TESTFILE
1   379	018A  B4 09			 mov ah,9
1   380	018C  BA 0003r			 mov dx,offset TESTFILE
1   381	018F  CD 21			 int 21h
    382					 PRINT NEWLINE
1   383	0191  B4 09			 mov ah,9
1   384	0193  BA 0000r			 mov dx,offset NEWLINE
1   385	0196  CD 21			 int 21h
    386					 PRINT FILENAME
1   387	0198  B4 09			 mov ah,9
1   388	019A  BA 01CFr			 mov dx,offset FILENAME
1   389	019D  CD 21			 int 21h
    390	019F			     final:
    391	019F  B4 4C			 mov AH, 4CH
    392	01A1  CD 21				     int 21H
    393
    394	01A3			       CODE ENDS
    395				       END START
Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 8
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "04/02/14"
??FILENAME		Text   "zadanie1"
??TIME			Text   "22:53:25"
??VERSION		Number 0314
@CPU			Text   0101H
@CURSEG			Text   CODE			   #28	#34  #144
@FILENAME		Text   ZADANIE1
@WORDSIZE		Text   2			   #28	#34  #144
BUFFER			Byte   DATA:0234		   #125	 286  292  295	304  307
CHARS			Near   CODE:0010		   #160
CLEAR			Near   CODE:0064		   #213	 232
CONT			Near   CODE:00D8		   #282	 301
DEC_DIVISION		Near   CODE:0015		   #162	 174
DEC_LENGTH		Byte   DATA:029A		   #127	 161  171  181	182
DEC_PRINT		Near   CODE:002C		   173	#176  184
EMPTY_HANDLE		Near   CODE:0134		   322	#326
END_READ		Near   CODE:0108		   290	#302
ERROR			Byte   DATA:0172		   #105	 258  351
ERROR_FL		Byte   DATA:0190		   #110	 363
ERR_NO_HANDLE		Byte   DATA:01B4		   #116	 272
FILENAME		Byte   DATA:01CF		   #123	 191  332  388
FILE_ERR		Near   CODE:0168		   335	#356
FINAL			Near   CODE:019F		   374	#390
FN_LEN			Byte   DATA:0233		   #124	 199  205
GO_ON			Near   CODE:00CA		   269	#276
HANDLE			Word   DATA:01CD		   #122	 267  278  284	320  337  340  372
LOAD_FILE		Near   CODE:011F		   248	#315
LOAD_INTER		Near   CODE:009C		   226	#247
MENU			Byte   DATA:000D		   #45	220
MSG_BACK		Byte   DATA:00F2		   #83
MSG_FILE_NAME		Byte   DATA:0142		   #95
MSG_LEN			Byte   DATA:0158		   #99
MSG_RETURN_ENTER	Byte   DATA:0115		   #88	151
NAVRAT			Near   CODE:0041		   183	#185
NENACITANE		Near   CODE:0154		   329	#344
NEWL			Text   13,10			   #38	40  45	45  45	53  56	60  66	72  78	83  88	95  105	 110  116
NEWLINE			Byte   DATA:0000		   #40	239  254  265  318  347	 359  384
OCCUR			Near   CODE:00A2		   230	#251
OUTPUT_FILE		Near   CODE:00B2		   228	#262
QUIT			Near   CODE:017C		   313	#370
QUIT_INTER1		Near   CODE:009F		   234	236  #249
QUIT_INTER2		Near   CODE:011C		   250	#312
READ			Word   DATA:0298		   #126	 288
READING			Near   CODE:0045		   #192	 200
READNAME		Near   CODE:0042		   #189	 327
RETURN			Near   CODE:0056		   196	#201
SELECT			Near   CODE:0070		   #222	 246
START			Near   CODE:005F		   #209	 395
TAB			Number 0009			   #39	53  56	60  66	72
TESTFILE		Byte   DATA:0003		   #41	380
UNKNWN			Byte   DATA:00E1		   #78	243
VYP_MENU		Near   CODE:0069		   #217	 260  274  310	342  354  366
WAITING			Near   CODE:0000		   #148	 156  353
WAIT_FOR		Near   CODE:0000		   #147	 309  365
Turbo Assembler	 Version 3.2	    04/02/14 22:53:25	    Page 9
Symbol Table




Macro Name						   Cref	(defined at #)

CLRSCR							   #132	 214
PRINT							   #138	 149  218  237	241  252  256  263  270	 293  305  316	338  345  +
							   349	357  361  378  382  386

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

CODE			16  01A3 Para	none		   #144	 145
DATA			16  029B Para	none		   #34	145  211
ZAS			16  0080 Para	Stack	STACK	   #28	145
