Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 1
zadanie1.asm



      1				     ; Zadanie c.1
      2				     ; Roman Roöt·r
      3				     ;
      4				     ; TEXT ZADANIA
      5				     ;	     NapÌöte program (v	JSI), ktor˝ umoûnÌ pouûÌvatelovi pomocou menu nasleduj˙ce akcie:    +
      6				     zadat meno	s˙boru,	vypÌsat	obsah s˙boru, vypÌsat dlûku s˙boru
      7				     ;	     (v	desiatkovej s˙stave, v bajtoch), vykonat pridelen˙ ˙lohu, ukoncit program. Program  +
      8				     nacÌta volbu pouûÌvatela z	kl·vesnice. Program sa musÌ ukoncit aj po stlacenÌ kl·vesu "ESCAPE".
      9				     ;	     V programe	vhodne pouûite makro s parametrom, ako aj vhodnÈ volania OS (resp. BIOS) pre+
     10				     nacÌtanie znaku, nastavenie kurzora, v˝pis	retazca, zmazanie obrazovky a pod. Na spracovanie   +
     11				     pola
     12				     ;	     znakov musia byt vhodne pouûitÈ retazcovÈ inötrukcie. Pridelen· ˙loha musÌ	byt	    +
     13				     realizovan· ako extern· proced˙ra (kompilovan· samostatne a prilinkovan· k	v˝slednÈmu programu).
     14				     ;	     DefinÌcie makier musia byt	v samostatnom s˙bore. Program musÌ korektne spracovat s˙bory+
     15				     s dlûkou aspon do 128 kB. Pri cÌtanÌ vyuûite pole vhodnej velkosti	(buffer), pricom zo s˙boru do
     16				     ;	     pam‰te sa bude pres˙vat vûdy (aû na poslednÈ cÌtanie) cel·	velkost	pola. Oöetrite	    +
     17				     chybovÈ stavy.
     18				     ;
     19				     ; DOPLNKOVA ULOHA
     20				     ; NaËÌtaù reùazec a vypÌsaù poËet jeho v˝skytov (ako podreùazca) v	s˙bore.
     21				     ;PREKLAD:	       [cesta]\tasm /l/zi/c subor.asm
     22				     ;LINKOVANIE:      [cesta]\tlink /l/i/v subor.obj
     23				     ;POMOCNE PROGRAMY:[cesta]\thelp\help.exe, abshelp.exe
     24				     ;		       [cesta]\tasm\thelp.com
     25				     ;		       [cesta]\ng\ng.exe
     26
     27
     28	0000			     ZAS   segment stack 'stack'								    +
     29				     ;zaciatok zasobnikoveho segmentu
     30	0000  40*(????)			   dw 64 dup(?)										    +
     31				     ;definicia	64-och slov v pamati
     32	0080			     ZAS   ENDS						       ;koniec zasobnikoveho segmentu
     33
     34	0000			     DATA    SEGMENT
     35					 ;zaciatok datoveho segmentu
     36
     37					 ;misc
     38	      =	13,10			 NEWL EQU 13,10
     39	      =0009			 TAB EQU 9
     40	0000  0D 0A 24			 NEWLINE   DB NEWL,'$'
     41	0003  61 68 6F 6A 2E 74	78+	 TESTFILE  DB 'ahoj.txt',0,'$'
     42	      74 00 24
     43
     44					 ;menu
     45	000D  0D 0A 41 53 4D 20	5A+	 MENU	       DB NEWL,'ASM Zadanie 1. -- Autor: Roman Rostar (c)',NEWL,'MENU :',NEWL
     46	      61 64 61 6E 69 65	20+
     47	      31 2E 20 2D 2D 20	41+
     48	      75 74 6F 72 3A 20	52+
     49	      6F 6D 61 6E 20 52	6F+
     50	      73 74 61 72 20 28	63+
     51	      29 0D 0A 4D 45 4E	55+
     52	      20 3A 0D 0A
     53	0042  09 31 2E 20 4E 61	63+				 DB TAB,'1. Nacitat subor',NEWL
     54	      69 74 61 74 20 73	75+
     55	      62 6F 72 0D 0A
     56	0055  09 32 2E 20 56 79	70+				       DB TAB,'2. Vypisat obsah	suboru',NEWL
     57	      69 73 61 74 20 6F	62+
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 2
zadanie1.asm



     58	      73 61 68 20 73 75	62+
     59	      6F 72 75 0D 0A
     60	006F  09 33 2E 20 50 6F	7A+			       DB TAB,'3. Pozicia maximalneho znaku v subore',NEWL
     61	      69 63 69 61 20 6D	61+
     62	      78 69 6D 61 6C 6E	65+
     63	      68 6F 20 7A 6E 61	6B+
     64	      75 20 76 20 73 75	62+
     65	      6F 72 65 0D 0A
     66	0097  09 34 2E 20 5A 6D	61+			       DB TAB,'4. Zmazat obrazovku a vypisat menu',NEWL,'$'
     67	      7A 61 74 20 6F 62	72+
     68	      61 7A 6F 76 6B 75	20+
     69	      61 20 76 79 70 69	73+
     70	      61 74 20 6D 65 6E	75+
     71	      0D 0A 24
     72	00BD  09 5B 45 53 43 2C	45+		   DB TAB,'[ESC,ENTER pre vypnutie programu',NEWL,'$'
     73	      4E 54 45 52 20 70	72+
     74	      65 20 76 79 70 6E	75+
     75	      74 69 65 20 70 72	6F+
     76	      67 72 61 6D 75 0D	0A+
     77	      24
     78	00E1  4E 65 7A 6E 61 6D	79+	 UNKNWN	   DB 'Neznamy prikaz',NEWL,'$'
     79	      20 70 72 69 6B 61	7A+
     80	      0D 0A 24
     81
     82					 ;messages
     83	00F2  53 74 6C 61 63 74	65+	 MSG_BACK	     DB	'Stlacte ENTER pre navrat do menu',NEWL,'$'
     84	      20 45 4E 54 45 52	20+
     85	      70 72 65 20 6E 61	76+
     86	      72 61 74 20 64 6F	20+
     87	      6D 65 6E 75 0D 0A	24
     88	0115  0D 0A 53 74 6C 61	63+	 MSG_RETURN_ENTER	     DB	     NEWL,'Stlacte ENTER pre navrat do hlavneho	menu.$'
     89	      74 65 20 45 4E 54	45+
     90	      52 20 70 72 65 20	6E+
     91	      61 76 72 61 74 20	64+
     92	      6F 20 68 6C 61 76	6E+
     93	      65 68 6F 20 6D 65	6E+
     94	      75 2E 24
     95	0142  5A 61 64 61 6A 74	65+	 MSG_FILE_NAME	     DB	 'Zadajte meno suboru',NEWL,'$'
     96	      20 6D 65 6E 6F 20	73+
     97	      75 62 6F 72 75 0D	0A+
     98	      24
     99	0158  50 6F 63 65 74 20	7A+	 MSG_LEN	     DB	'Pocet znako v subore je: ','$'
    100	      6E 61 6B 6F 20 76	20+
    101	      73 75 62 6F 72 65	20+
    102	      6A 65 3A 20 24
    103	0172  4E 61 6A 76 61 63	73+	 MSG_CHR	     DB	'Najvacsi znak je: ','$'
    104	      69 20 7A 6E 61 6B	20+
    105	      6A 65 3A 20 24
    106	0185  6E 61 20 70 6F 7A	69+	 MSG_POS	     DB	'na pozicii: ','$'
    107	      63 69 69 3A 20 24
    108
    109					 ;error	messages
    110	0192  45 72 72 6F 72 3A	20+	 ERROR	   DB 'Error: Not yet implemented!',NEWL,'$'
    111	      4E 6F 74 20 79 65	74+
    112	      20 69 6D 70 6C 65	6D+
    113	      65 6E 74 65 64 21	0D+
    114	      0A 24
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 3
zadanie1.asm



    115	01B0  4E 61 73 74 61 6C	61+	 ERROR_FL  DB 'Nastala chyba pri otvarani suboru',NEWL,'$'
    116	      20 63 68 79 62 61	20+
    117	      70 72 69 20 6F 74	76+
    118	      61 72 61 6E 69 20	73+
    119	      75 62 6F 72 75 0D	0A+
    120	      24
    121	01D4  4E 61 6A 70 72 76	20+	 ERR_NO_HANDLE	DB 'Najprv nacitajte subor',NEWL,'$'
    122	      6E 61 63 69 74 61	6A+
    123	      74 65 20 73 75 62	6F+
    124	      72 0D 0A 24
    125					 ;
    126					 ;File handle suboru
    127	01ED  0000			 HANDLE	   DW 0
    128	01EF  64*(??)			 FILENAME  DB 100 dup (?)
    129	0253  00			 FN_LEN	   DB 0
    130	0254  64*(??)			 BUFFER	   DB 100 dup (?)
    131	02B8  0000			 READ	   DW 0
    132	02BA  0000			 D	   DW 0
    133	02BC  0000			 POS	   DW 0
    134	02BE  00			 MAX_VAL   DB 0
    135	02BF  0000			 MAX_POS   DW 0
    136	02C1  00			 dec_length	     db	     0
    137	02C2			     DATA ENDS
    138
    139				     include makra.asm
1   140				       ;makro na vycistenie obrazovky aka clrscr
1   141				       CLRSCR  macro
1   142					       mov AX,3
1   143					       int 10H
1   144				       endm
1   145
1   146				       ;makro s	parametrom na vypis retazca
1   147				       PRINT macro TEXT
1   148					 mov ah,9
1   149					 mov dx,offset TEXT
1   150					 int 21h
1   151				       endm
    152
    153	0000			     CODE SEGMENT
    154				     ASSUME CS:CODE,DS:DATA,SS:ZAS  ;makro na vycistenie obrazovky aka clrscr
    155
    156	0000			       CHARS proc			     ; prevod z	bytov do dekadickeho cisla
    157	0000  C6 06 02C1r 00			     mov dec_length, 0	     ;dlzka decimalneho	cisla =	pocet cifier zatial 0
    158	0005				     DEC_DIVISION:
    159	0005  33 D2				     xor dx, dx			     ;uvodny xor
    160	0007  B9 000A				     mov cx, 10
    161
    162	000A  8B C3				     mov ax, bx		     ;do ax nacitame nase cislo, ktore chceme vypisovat,    +
    163				     vzdy v programe ho	umiesnujem to bx
    164	000C  F7 F1				     div cx		     ;predelime	desiatmi
    165	000E  8B D8				     mov bx, ax		     ;do bx skopirujeme	obsah ax, tj predelene cislo
    166	0010  52				     push dx		     ;do dx hodime cifru
    167	0011  FE 06 02C1r			     inc dec_length	     ;pridame jednu cifru
    168	0015  83 FB 00				     cmp bx, 0			     ;skontrolujeme ci este mame cifry v bx
    169	0018  74 02				     jz	DEC_PRINT
    170	001A  EB E9				     jmp DEC_DIVISION
    171
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 4
zadanie1.asm



    172	001C				     DEC_PRINT:		     ;vypisanie	dekadickeho cisla
    173	001C  5A				     pop dx	     ;cifru vytiahneme z dx
    174	001D  83 C2 30				     add dx, 30h		     ;posun na zaciatok	cisel
    175	0020  B4 02				     mov ah, 02h		     ;funkcia na print cisla
    176	0022  CD 21				     int 21h
    177	0024  FE 0E 02C1r			     dec dec_length	     ; posun o cifru dalej
    178	0028  80 3E 02C1r 00			     cmp dec_length, 0
    179	002D  74 02				     jz	navrat ;uz sme vypisali	cele cislo
    180	002F  EB EB				     jmp DEC_PRINT
    181	0031				     navrat:
    182	0031  C3				     ret
    183	0032				     endp CHARS
    184
    185	0032			       OCC proc
    186	0032  C7 06 02BAr 0000		 mov D,0
    187	0038  C7 06 02BCr 0000		 mov POS,0
    188	003E  C6 06 02BEr 00		 mov MAX_VAL, 0
    189	0043  C7 06 02BFr 0000		 mov MAX_POS, 0
    190
    191					 PRINT NEWLINE
1   192	0049  B4 09			 mov ah,9
1   193	004B  BA 0000r			 mov dx,offset NEWLINE
1   194	004E  CD 21			 int 21h
    195	0050  A1 01EDr			 mov AX,HANDLE
    196	0053  3D 0000			 cmp AX,0
    197	0056  75 08			 jnz go_on1
    198					 PRINT ERR_NO_HANDLE
1   199	0058  B4 09			 mov ah,9
1   200	005A  BA 01D4r			 mov dx,offset ERR_NO_HANDLE
1   201	005D  CD 21			 int 21h
    202	005F  C3			 ret
    203
    204	0060			     go_on1:
    205	0060  B4 42			 mov ah, 42h ;nastavim sa na zaciatok suboru
    206	0062  8B 1E 01EDr		 mov BX, HANDLE
    207	0066  B0 00			 mov al, 0
    208	0068  BA 0000			 mov dx, 0
    209	006B  B9 0000			 mov cx, 0
    210	006E  CD 21			 int 21h
    211	0070			     cont1:	    ;pokracujem	citanie
    212	0070  B4 3F			 mov AH, 3Fh
    213	0072  8B 1E 01EDr		 mov BX, HANDLE
    214	0076  B9 0063			 mov CX, 99
    215	0079  BA 0254r			 lea DX, BUFFER
    216	007C  CD 21			 int 21h	;precitam 99bajtov do bufferu
    217
    218	007E  53			 push bx ;schovam bx nakonci vytiahnem
    219
    220	007F  3B C1			 cmp ax,cx ;porovnam kolko ancital
    221	0081  75 37			 jne end_read1;	ak sa nerovnaju	uz som docital
    222	0083  50			 push ax
    223	0084  53			 push bx
    224	0085  52			 push dx
    225
    226	0086  C7 06 02BAr 0000		 mov D,0
    227	008C			     loo:
    228					 ;prejdi buffer
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 5
zadanie1.asm



    229	008C  BF 0254r			 lea di, buffer
    230	008F  03 3E 02BAr		 add di,D
    231	0093  8A 05			 MOV AL, [DI]
    232	0095  3A 06 02BEr		 cmp AL, MAX_VAL
    233	0099  7E 09			 jng next
    234	009B  A2 02BEr			 MOV MAX_VAL,AL	;ak je tak prepis maxhodnotu
    235	009E  A1 02BCr				     MOV AX,POS
    236	00A1  A3 02BFr				     MOV MAX_POS, AX
    237	00A4			     next:
    238	00A4  FF 06 02BAr		 inc D
    239	00A8  FF 06 02BCr		 inc POS
    240	00AC  8B 1E 02BAr		 MOV BX, D		     ;zistujem ci uz som na konci obsahu suboru
    241	00B0  83 FB 63				     CMP BX,99
    242	00B3  7E D7				     JNG loo
    243	00B5  5A			 pop dx
    244	00B6  5B			 pop bx
    245	00B7  58			 pop ax
    246	00B8  EB B6			 jmp cont1
    247
    248	00BA			     end_read1:
    249	00BA  50			 push ax
    250	00BB  53			 push bx
    251	00BC  52			 push dx
    252
    253	00BD  C7 06 02BAr 0000		 mov D,0
    254	00C3			     loo2:
    255					 ;prejdi buffer
    256	00C3  BF 0254r			 lea di, buffer
    257	00C6  03 3E 02BAr		 add di,D
    258	00CA  8A 05			 MOV AL, [DI]
    259	00CC  3A 06 02BEr		 cmp AL, MAX_VAL
    260	00D0  7E 09			 jng next2
    261	00D2  A2 02BEr			 MOV MAX_VAL,AL	;ak je tak prepis maxhodnotu
    262	00D5  A1 02BCr				     MOV AX,POS
    263	00D8  A3 02BFr				     MOV MAX_POS, AX
    264	00DB			     next2:
    265	00DB  FF 06 02BAr		 inc D
    266	00DF  FF 06 02BCr		 inc POS
    267	00E3  8B 1E 02BAr		 MOV BX, D		     ;zistujem ci uz som na konci obsahu suboru
    268	00E7  3B D9				     CMP BX,CX
    269	00E9  7E D8				     JNG loo2
    270	00EB  5A			 pop dx
    271	00EC  5B			 pop bx
    272	00ED  58			 pop ax
    273	00EE  C3			 ret
    274	00EF			       endp
    275
    276	00EF			       WAIT_FOR	proc
    277	00EF				 waiting:
    278						     PRINT MSG_RETURN_ENTER
1   279	00EF  B4 09			 mov ah,9
1   280	00F1  BA 0115r			 mov dx,offset MSG_RETURN_ENTER
1   281	00F4  CD 21			 int 21h
    282	00F6  B4 08			   mov AH, 8	     ; nacitanie znaku
    283	00F8  CD 21					     int 21H
    284	00FA  3C 0D					     cmp AL, 13		     ;Porovnaj ci bol stlaceny enter
    285	00FC  E0 F1				     loopne waiting
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 6
zadanie1.asm



    286	00FE  C3				     ret
    287	00FF				     endp
    288
    289
    290
    291	00FF			       READNAME	proc
    292					 ;PRINT	MSG_FILE_NAME
    293	00FF  BB 01EFr			 lea BX, FILENAME
    294	0102				 reading:
    295	0102  B4 01			   mov AH, 1	     ; nacitanie znaku
    296	0104  CD 21					     int 21H
    297	0106  3C 0D					     cmp AL, 13		     ;Porovnaj ci bol stlaceny enter
    298	0108  74 09			   jz  return	 ;ak hej skoncili sme
    299	010A  88 07			   mov [BX],AL	 ;
    300	010C  43			   inc BX
    301	010D  FE 06 0253r		   inc FN_LEN
    302	0111  EB EF			   jmp reading
    303	0113				 return:
    304	0113  B0 24			   mov AL,'$'
    305	0115  88 07			   mov [BX],AL
    306					   ;PRINT FILE
    307	0117  8A 26 0253r		   mov AH, FN_LEN  ;necham v AH	dlzku mena
    308	011B  C3				       ret
    309	011C			       endp
    310
    311	011C			       START:
    312					 ;nacitanie programu
    313	011C  B8 0000s			 MOV AX, SEG DATA
    314	011F  8E D8				     MOV DS, AX
    315	0121			     clear:
    316					 CLRSCR
1   317	0121  B8 0003			       mov AX,3
1   318	0124  CD 10			       int 10H
    319	0126			     vyp_menu:
    320					 PRINT MENU
1   321	0126  B4 09			 mov ah,9
1   322	0128  BA 000Dr			 mov dx,offset MENU
1   323	012B  CD 21			 int 21h
    324	012D			     select:
    325	012D  B4 01				     mov  ah,1
    326	012F  CD 21				     int  21h
    327	0131  3C 31				     cmp al,'1'			     ;nacitaj subor
    328	0133  74 24				     jz	load_inter
    329	0135  3C 32				     cmp al, '2'	     ;vypis subor
    330	0137  74 52				     jz	output_file
    331	0139  3C 33				     cmp al, '3'     ;pocet vyskytov v subore
    332	013B  74 22				     jz	occur
    333	013D  3C 34			 cmp al,'4'		     ;zmaz obrazovku,vypis menu
    334	013F  74 E0				     jz	clear
    335	0141  3C 1B				     cmp al, 27	; esc na ukoncenie
    336	0143  74 17				     jz	quit_inter1
    337	0145  3C 0D				     cmp al, 13	;enter na ukoncenie
    338	0147  74 13				     jz	quit_inter1
    339					 PRINT NEWLINE
1   340	0149  B4 09			 mov ah,9
1   341	014B  BA 0000r			 mov dx,offset NEWLINE
1   342	014E  CD 21			 int 21h
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 7
zadanie1.asm



    343					 PRINT UNKNWN  ;ak stlatcil nieco ine
1   344	0150  B4 09			 mov ah,9
1   345	0152  BA 00E1r			 mov dx,offset UNKNWN
1   346	0155  CD 21			 int 21h
    347					 ;PRINT	NEWL
    348	0157  EB D4			 jmp select
    349	0159			     load_inter:
    350	0159  E9 00BA			 jmp load_file
    351	015C			     quit_inter1:
    352	015C  E9 00B4			 jmp quit_inter2
    353
    354	015F			     occur:
    355	015F  E8 FED0			 call OCC
    356					 PRINT MSG_CHR
1   357	0162  B4 09			 mov ah,9
1   358	0164  BA 0172r			 mov dx,offset MSG_CHR
1   359	0167  CD 21			 int 21h
    360	0169  B4 02			 MOV AH, 02h
    361	016B  8A 16 02BEr			     MOV DL, MAX_VAL
    362	016F  CD 21				     INT 21h
    363					 PRINT NEWLINE
1   364	0171  B4 09			 mov ah,9
1   365	0173  BA 0000r			 mov dx,offset NEWLINE
1   366	0176  CD 21			 int 21h
    367					 PRINT MSG_POS
1   368	0178  B4 09			 mov ah,9
1   369	017A  BA 0185r			 mov dx,offset MSG_POS
1   370	017D  CD 21			 int 21h
    371	017F  8B 1E 02BFr		 mov BX, MAX_POS
    372	0183  E8 FE7A			 call chars
    373	0186  E8 FF66			 call wait_for
    374	0189  EB 9B			 jmp vyp_menu
    375
    376	018B			     output_file:
    377					 PRINT NEWLINE
1   378	018B  B4 09			 mov ah,9
1   379	018D  BA 0000r			 mov dx,offset NEWLINE
1   380	0190  CD 21			 int 21h
    381	0192  C7 06 02B8r 0000		 mov READ, 0
    382	0198  A1 01EDr			 mov AX,HANDLE
    383	019B  3D 0000			 cmp AX,0
    384	019E  75 0A			 jnz go_on
    385					 PRINT ERR_NO_HANDLE
1   386	01A0  B4 09			 mov ah,9
1   387	01A2  BA 01D4r			 mov dx,offset ERR_NO_HANDLE
1   388	01A5  CD 21			 int 21h
    389	01A7  E9 FF7C			 jmp vyp_menu
    390
    391	01AA			     go_on:
    392	01AA  B4 42			 mov ah, 42h ;nastavim sa na zaciatok suboru
    393	01AC  8B 1E 01EDr		 mov BX, HANDLE
    394	01B0  B0 00			 mov al, 0
    395	01B2  BA 0000			 mov dx, 0
    396	01B5  B9 0000			 mov cx, 0
    397	01B8  CD 21			 int 21h
    398	01BA			     cont:	   ;pokracujem citanie
    399	01BA  B4 3F			 mov AH, 3Fh
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 8
zadanie1.asm



    400	01BC  8B 1E 01EDr		 mov BX, HANDLE
    401	01C0  B9 0063			 mov CX, 99
    402	01C3  BA 0254r			 lea DX, BUFFER
    403	01C6  CD 21			 int 21h	;precitam 99bajtov do bufferu
    404	01C8  01 06 02B8r		 add READ,AX
    405	01CC  3B C1			 cmp ax,cx ;porovnam kolko ancital
    406	01CE  75 1A			 jne end_read; ak sa nerovnaju uz som docital
    407	01D0  8B D8			 mov bx,ax
    408	01D2  C6 87 0254r 24		 mov BUFFER[bx],'$' ;vypisem co	zatial mam
    409					 PRINT BUFFER
1   410	01D7  B4 09			 mov ah,9
1   411	01D9  BA 0254r			 mov dx,offset BUFFER
1   412	01DC  CD 21			 int 21h
    413	01DE  B4 42			 mov ah, 42h	    ;posuniem sa o 99 B	dalej
    414	01E0  B0 01			 mov al, 1 ;idem od current
    415	01E2  BA 0063			 mov dx, 99
    416	01E5  B9 0000			 mov cx, 0
    417	01E8  EB D0			 jmp cont
    418	01EA			     end_read:
    419	01EA  8B D8			 mov bx,ax
    420	01EC  C6 87 0254r 24		 mov BUFFER[bx],'$'
    421					 PRINT BUFFER
1   422	01F1  B4 09			 mov ah,9
1   423	01F3  BA 0254r			 mov dx,offset BUFFER
1   424	01F6  CD 21			 int 21h
    425					 PRINT NEWLINE
1   426	01F8  B4 09			 mov ah,9
1   427	01FA  BA 0000r			 mov dx,offset NEWLINE
1   428	01FD  CD 21			 int 21h
    429					 PRINT MSG_LEN
1   430	01FF  B4 09			 mov ah,9
1   431	0201  BA 0158r			 mov dx,offset MSG_LEN
1   432	0204  CD 21			 int 21h
    433	0206  8B 1E 02B8r		 mov bx,read
    434	020A  E8 FDF3			 call CHARS
    435	020D  E8 FEDF			 call WAIT_FOR
    436	0210  E9 FF13			 jmp vyp_menu
    437
    438	0213			     quit_inter2:
    439	0213  EB 5E 90			 jmp quit
    440
    441	0216			     load_file:
    442					 PRINT NEWLINE
1   443	0216  B4 09			 mov ah,9
1   444	0218  BA 0000r			 mov dx,offset NEWLINE
1   445	021B  CD 21			 int 21h
    446	021D  A1 01EDr			 mov ax,handle
    447	0220  3D 0000			 cmp ax, 0
    448	0223  74 06			 jz empty_handle
    449	0225  8B D8			 mov bx, ax  ;nacitam filehandle
    450	0227  B4 3E			 mov ah, 3Eh ;fcia na zavretie handle
    451	0229  CD 21			 int 21h
    452	022B			     empty_handle:
    453	022B  E8 FED1			 call READNAME
    454	022E  80 FC 00			 cmp AH,0
    455	0231  74 18			 jz  nenacitane
    456	0233  B4 3D			 mov AH, 3DH ; FCIA NA OTVORENIE SUBORU
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 9
zadanie1.asm



    457	0235  B0 00			 mov AL, 0   ; 0= READ-ONLY ACCESS
    458	0237  BA 01EFr			 mov DX, OFFSET	FILENAME
    459	023A  CD 21			 int 21H
    460					 ;ak bola chyba	tak ideme prec
    461	023C  72 21			 jc file_err
    462
    463	023E  A3 01EDr			 mov handle,ax ;nebola chyba
    464					 PRINT handle
1   465	0241  B4 09			 mov ah,9
1   466	0243  BA 01EDr			 mov dx,offset handle
1   467	0246  CD 21			 int 21h
    468	0248  E9 FEDB			 jmp vyp_menu
    469
    470	024B			     nenacitane:
    471					 PRINT NEWLINE
1   472	024B  B4 09			 mov ah,9
1   473	024D  BA 0000r			 mov dx,offset NEWLINE
1   474	0250  CD 21			 int 21h
    475					 PRINT ERROR
1   476	0252  B4 09			 mov ah,9
1   477	0254  BA 0192r			 mov dx,offset ERROR
1   478	0257  CD 21			 int 21h
    479	0259  E8 FE93			 call WAITING
    480	025C  E9 FEC7			 jmp vyp_menu
    481
    482	025F			     file_err:
    483					 PRINT NEWLINE
1   484	025F  B4 09			 mov ah,9
1   485	0261  BA 0000r			 mov dx,offset NEWLINE
1   486	0264  CD 21			 int 21h
    487					 PRINT ERROR_FL
1   488	0266  B4 09			 mov ah,9
1   489	0268  BA 01B0r			 mov dx,offset ERROR_FL
1   490	026B  CD 21			 int 21h
    491	026D  E8 FE7F			 call WAIT_FOR
    492	0270  E9 FEB3			 jmp vyp_menu
    493
    494
    495
    496	0273			     quit:
    497					 ;ukoncenie programu
    498	0273  A1 01EDr			 mov ax,handle
    499	0276  3D 0000			 cmp ax, 0
    500	0279  74 1B			 jz final
    501	027B  8B D8			 mov bx, ax  ;nacitam filehandle
    502	027D  B4 3E			 mov ah, 3Eh ;fcia na zavretie handle
    503	027F  CD 21			 int 21h
    504					 PRINT TESTFILE
1   505	0281  B4 09			 mov ah,9
1   506	0283  BA 0003r			 mov dx,offset TESTFILE
1   507	0286  CD 21			 int 21h
    508					 PRINT NEWLINE
1   509	0288  B4 09			 mov ah,9
1   510	028A  BA 0000r			 mov dx,offset NEWLINE
1   511	028D  CD 21			 int 21h
    512					 PRINT FILENAME
1   513	028F  B4 09			 mov ah,9
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 10
zadanie1.asm



1   514	0291  BA 01EFr			 mov dx,offset FILENAME
1   515	0294  CD 21			 int 21h
    516	0296			     final:
    517	0296  B4 4C			 mov AH, 4CH
    518	0298  CD 21				     int 21H
    519
    520	029A			       CODE ENDS
    521				       END START
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 11
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "04/03/14"
??FILENAME		Text   "zadanie1"
??TIME			Text   "02:01:20"
??VERSION		Number 0314
@CPU			Text   0101H
@CURSEG			Text   CODE			   #28	#34  #153
@FILENAME		Text   ZADANIE1
@WORDSIZE		Text   2			   #28	#34  #153
BUFFER			Byte   DATA:0254		   #130	 215  229  256	402  408  411  420  423
CHARS			Near   CODE:0000		   #156	 372  434
CLEAR			Near   CODE:0121		   #315	 334
CONT			Near   CODE:01BA		   #398	 417
CONT1			Near   CODE:0070		   #211	 246
D			Word   DATA:02BA		   #132	 186  226  230	238  240  253  257  265	 267
DEC_DIVISION		Near   CODE:0005		   #158	 170
DEC_LENGTH		Byte   DATA:02C1		   #136	 157  167  177	178
DEC_PRINT		Near   CODE:001C		   169	#172  180
EMPTY_HANDLE		Near   CODE:022B		   448	#452
END_READ		Near   CODE:01EA		   406	#418
END_READ1		Near   CODE:00BA		   221	#248
ERROR			Byte   DATA:0192		   #110	 477
ERROR_FL		Byte   DATA:01B0		   #115	 489
ERR_NO_HANDLE		Byte   DATA:01D4		   #121	 200  387
FILENAME		Byte   DATA:01EF		   #128	 293  458  514
FILE_ERR		Near   CODE:025F		   461	#482
FINAL			Near   CODE:0296		   500	#516
FN_LEN			Byte   DATA:0253		   #129	 301  307
GO_ON			Near   CODE:01AA		   384	#391
GO_ON1			Near   CODE:0060		   197	#204
HANDLE			Word   DATA:01ED		   #127	 195  206  213	382  393  400  446  463	 466  498
LOAD_FILE		Near   CODE:0216		   350	#441
LOAD_INTER		Near   CODE:0159		   328	#349
LOO			Near   CODE:008C		   #227	 242
LOO2			Near   CODE:00C3		   #254	 269
MAX_POS			Word   DATA:02BF		   #135	 189  236  263	371
MAX_VAL			Byte   DATA:02BE		   #134	 188  232  234	259  261  361
MENU			Byte   DATA:000D		   #45	322
MSG_BACK		Byte   DATA:00F2		   #83
MSG_CHR			Byte   DATA:0172		   #103	 358
MSG_FILE_NAME		Byte   DATA:0142		   #95
MSG_LEN			Byte   DATA:0158		   #99	431
MSG_POS			Byte   DATA:0185		   #106	 369
MSG_RETURN_ENTER	Byte   DATA:0115		   #88	280
NAVRAT			Near   CODE:0031		   179	#181
NENACITANE		Near   CODE:024B		   455	#470
NEWL			Text   13,10			   #38	40  45	45  45	53  56	60  66	72  78	83  88	95  110	 115  121
NEWLINE			Byte   DATA:0000		   #40	193  341  365  379  427	 444  473  485	510
NEXT			Near   CODE:00A4		   233	#237
NEXT2			Near   CODE:00DB		   260	#264
OCC			Near   CODE:0032		   #185	 355
OCCUR			Near   CODE:015F		   332	#354
OUTPUT_FILE		Near   CODE:018B		   330	#376
POS			Word   DATA:02BC		   #133	 187  235  239	262  266
QUIT			Near   CODE:0273		   439	#496
Turbo Assembler	 Version 3.2	    04/03/14 02:01:20	    Page 12
Symbol Table



QUIT_INTER1		Near   CODE:015C		   336	338  #351
QUIT_INTER2		Near   CODE:0213		   352	#438
READ			Word   DATA:02B8		   #131	 381  404  433
READING			Near   CODE:0102		   #294	 302
READNAME		Near   CODE:00FF		   #291	 453
RETURN			Near   CODE:0113		   298	#303
SELECT			Near   CODE:012D		   #324	 348
START			Near   CODE:011C		   #311	 521
TAB			Number 0009			   #39	53  56	60  66	72
TESTFILE		Byte   DATA:0003		   #41	506
UNKNWN			Byte   DATA:00E1		   #78	345
VYP_MENU		Near   CODE:0126		   #319	 374  389  436	468  480  492
WAITING			Near   CODE:00EF		   #277	 285  479
WAIT_FOR		Near   CODE:00EF		   #276	 373  435  491

Macro Name						   Cref	(defined at #)

CLRSCR							   #141	 316
PRINT							   #147	 191  198  278	320  339  343  356  363	 367  377  385	409  421  +
							   425	429  442  464  471  475	 483  487  504	508  512

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

CODE			16  029A Para	none		   #153	 154
DATA			16  02C2 Para	none		   #34	154  313
ZAS			16  0080 Para	Stack	STACK	   #28	154
